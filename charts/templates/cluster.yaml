apiVersion: provisioning.cattle.io/v1
kind: Cluster
metadata:
  {{- if .Values.cluster.labels }}
  labels:
{{ toYaml .Values.cluster.labels | indent 4 }}
  {{- end }}
  {{- if .Values.cluster.annotations }}
  annotations:
{{ toYaml .Values.cluster.annotations | indent 4 }}
  {{- end }}
  name: {{ default .Release.Name .Values.cluster.name }}
  namespace: fleet-default
spec:
  {{- if .Values.cloudCredentialSecretName }}
  cloudCredentialSecretName: {{ .Values.cloudCredentialSecretName }}
  {{- end }}
  {{- if .Values.kubernetesVersion }}
  kubernetesVersion: {{ .Values.kubernetesVersion }}
  {{- end }}
  {{- if .Values.rke.localClusterAuthEndpoint.enabled }}
  localClusterAuthEndpoint:
    enabled: {{ .Values.rke.localClusterAuthEndpoint.enabled }}
    fqdn: {{ .Values.rke.localClusterAuthEndpoint.fqdn }}
    caCerts: {{ .Values.rke.localClusterAuthEndpoint.caCerts }}
  {{- end }}
  # enable network policy
  enableNetworkPolicy: true
  # specify rancher helm chart values deployed into downstream cluster
  # rancherValues: {}
  rkeConfig:
    {{- if ne .Values.cloudprovider "custom" }}
    machinePools:
    {{- if .Values.nodepools }} {{ range $index, $nodepool := .Values.nodepools }}
    - controlPlaneRole: {{ $nodepool.controlplane }}
      etcdRole: {{ $nodepool.etcd }}
      workerRole: {{ $nodepool.worker }}
      quantity: {{ default 1 $nodepool.quantity }}
      name: {{ $nodepool.name }}
      machineConfigRef:
        {{- if eq $.Values.cloudprovider "amazonec2" }}
        kind: Amazonec2Config
        {{- else if eq $.Values.cloudprovider "vsphere" }}
        kind: VmwarevsphereConfig
        {{- else if eq $.Values.cloudprovider "harvester" }}
        kind: HarvesterConfig
        {{- else if eq $.Values.cloudprovider "digitalocean" }}
        kind: DigitaloceanConfig
        {{- else if eq $.Values.cloudprovider "azure" }}
        kind: AzureConfig
        {{- else if eq $.Values.cloudprovider "elemental" }}
        kind: MachineInventorySelectorTemplate
        apiVersion: elemental.cattle.io/v1beta1
        {{- end}}
        name: {{ $nodepool.name }}
      paused: {{ default false $nodepool.paused }}
      displayName: {{ default $nodepool.name $nodepool.displayName }}
      {{- if $nodepool.rollingUpdate }}
      rollingUpdate:
        maxUnavailable: {{ $nodepool.rollingUpdate.maxUnavailable }}
        maxSurge: {{ $nodepool.rollingUpdate.maxSurge }}
      {{- end }}
      {{- if $nodepool.machineDeploymentLabels }}
      machineDeploymentLabels:
{{ toYaml $nodepool.machineDeploymentLabels | indent 8 }}
      {{- end }}
      {{- if $nodepool.machineDeploymentAnnotations }}
      machineDeploymentAnnotations:
{{ toYaml $nodepool.machineDeploymentAnnotations | indent 8 }}
      {{- end }}
      {{- end }}
    {{- end }}
    {{- if .Values.nodepool }}
    {{ $nodepool := .Values.nodepool }}
    - controlPlaneRole: {{ $nodepool.controlplane }}
      etcdRole: {{ $nodepool.etcd }}
      workerRole: {{ $nodepool.worker }}
      quantity: {{ default 1 $nodepool.quantity }}
      name: {{ $nodepool.name }}
      machineConfigRef:
        {{- if eq $.Values.cloudprovider "amazonec2" }}
        kind: Amazonec2Config
        {{- else if eq $.Values.cloudprovider "vsphere" }}
        kind: VmwarevsphereConfig
        {{- else if eq $.Values.cloudprovider "harvester" }}
        kind: HarvesterConfig
        {{- else if eq $.Values.cloudprovider "digitalocean" }}
        kind: DigitaloceanConfig
        {{- else if eq $.Values.cloudprovider "azure" }}
        kind: AzureConfig
        {{- else if eq $.Values.cloudprovider "elemental" }}
        kind: MachineInventorySelectorTemplate
        apiVersion: elemental.cattle.io/v1beta1
        {{- end}}
        name: {{ $nodepool.name }}
      paused: {{ default false $nodepool.paused }}
      displayName: {{ default $nodepool.name $nodepool.displayName }}
      {{- if $nodepool.rollingUpdate }}
      rollingUpdate:
        maxUnavailable: {{ $nodepool.rollingUpdate.maxUnavailable }}
        maxSurge: {{ $nodepool.rollingUpdate.maxSurge }}
      {{- end }}
      {{- if $nodepool.machineDeploymentLabels }}
      machineDeploymentLabels:
{{ toYaml $nodepool.machineDeploymentLabels | indent 8 }}
      {{- end }}
      {{- if $nodepool.machineDeploymentAnnotations }}
      machineDeploymentAnnotations:
{{ toYaml $nodepool.machineDeploymentAnnotations | indent 8 }}
      {{- end }}
    {{- end }}
    {{- end }}

    {{- with .Values.rke.machineGlobalConfig }}
    machineGlobalConfig:
{{ toYaml . | indent 6 }}
    {{- end }}

    {{- with .Values.rke.machineSelectorConfig }}
    machineSelectorConfig:
{{ toYaml . | indent 6 }}
    {{- end }}

    {{- if .Values.rke.localClusterAuthEndpoint.enabled }}
    localClusterAuthEndpoint:
      enabled: {{ .Values.rke.localClusterAuthEndpoint.enabled }}
      fqdn: {{ .Values.rke.localClusterAuthEndpoint.fqdn }}
      caCerts: {{ .Values.rke.localClusterAuthEndpoint.caCerts }}
    {{- end }}
    upgradeStrategy:
      {{- with .Values.rke.upgradeStrategy.controlPlaneDrainOptions }}
      controlPlaneDrainOptions:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.rke.upgradeStrategy.workerDrainOptions }}
      workerDrainOptions:
{{ toYaml . | indent 8 }}
      {{- end }}
      workerConcurrency: {{ default "10%" .Values.rke.upgradeStrategy.workerConcurrency }}
      controlPlaneConcurrency: {{ default "10%" .Values.rke.upgradeStrategy.controlPlaneConcurrency }}
{{- if .Values.agentEnvs }}
  agentEnvVars:
{{ toYaml .Values.agentEnvs | indent 4 }}
{{- end }}
